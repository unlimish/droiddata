AntiFeatures:Tracking,Ads
Categories:Internet
License:GPLv3
Web Site:http://adblockplus.org/en/android
Source Code:https://hg.adblockplus.org/adblockplusandroid
Issue Tracker:https://adblockplus.org/forum/viewforum.php?f=11
# Links to Paypal currently
Donate:http://adblockplus.org/en/contribute#donate
FlattrID:454073

Auto Name:Adblock Plus
Summary:Ad blocker
Description:
'''N.B''' If you get a http error 400 when updating the F-Droid client, it is
probably caused by this app and you will need to disable ad-blocking
to allow the F-Droid repos to update correctly.

Adblock Plus runs in the background and filters ads, using the same filters as
the Adblock Plus browser extension. Without needing root, it uses a proxy
feature that comes with Android 3.1+ to block ads over WiFi ; but if your
phone comes with extra proxy settings (e.g. Samsung or Custom ROMs), it can be
configured for Android 3.0 and below. Instructions are provided in the app or
on their [https://adblockplus.org/en/android-config website].

Requires root: No. Without root it uses a local proxy to filter ads for all apps
'''over WiFi only''' ; if you allow root the app can edit the hosts file too and
block ads on cellular data access points.

Anti-features: Tracking: The app checks regularly for new versions
on the developers' website. Ads: Adblock plus have an 'acceptable ads'
policy so ads from certain companies won't be blocked.
.

Repo Type:hg
Repo:https://hg.adblockplus.org/adblockplusandroid

Build:1.0.1,168
    commit=1.0.1
    init=rm -rf iptables/ libs/RootToolsSvn-1.7.jar build.xml && \
        git clone https://android.googlesource.com/platform/external/iptables
    srclibs=RootToolsSvn@1.7
    prebuild=echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        sed -i 's@ndk-build@$$NDK$$/ndk-build@g' Makefile && \
        make fixextensions build && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=yes

Build:1.1,238
    commit=1.1
    init=rm -rf iptables/ libs/* obj/ build.xml && \
        git clone https://android.googlesource.com/platform/external/iptables
    update=.,submodules/actionbarsherlock/library,submodules/android-switch-backport
    srclibs=RootToolsSvn@1.7
    prebuild=echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        sed -i 's@ndk-build@$$NDK$$/ndk-build@g' Makefile && \
        make fixextensions build && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=yes

Build:1.1.1,248
    commit=1.1.1
    init=rm -rf iptables/ libs/* obj/ build.xml && \
        git clone https://android.googlesource.com/platform/external/iptables
    update=.,submodules/actionbarsherlock/library,submodules/android-switch-backport
    srclibs=RootToolsSvn@1.7
    prebuild=echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        sed -i 's@ndk-build@$$NDK$$/ndk-build@g' Makefile && \
        make fixextensions build && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=yes

Build:1.1.2,253
    commit=1.1.2
    srclibs=RootToolsSvn@1.7,iptables@android-4.2.2_r1
    prebuild=rm libs/RootToolsSvn-1.7.jar && \
        cp -r $$iptables$$ . && \
        echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        python extensions/fixinit.py
    build=cd iptables && \
        $$NDK$$/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=no

Build:1.1.3,270
    commit=1.1.3
    srclibs=RootToolsSvn@1.7,iptables@android-4.2.2_r1
    prebuild=rm libs/RootToolsSvn-1.7.jar && \
        cp -r $$iptables$$ . && \
        echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        python extensions/fixinit.py
    build=cd iptables && \
        $$NDK$$/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=no

Build:1.1.4,286
    disable=blobs in jni
    commit=1.1.4
    srclibs=RootToolsSvn@1.7,iptables@android-4.2.2_r1
    prebuild=rm libs/RootToolsSvn-1.7.jar && \
        cp -r $$iptables$$ . && \
        echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        cd iptables && \
        git apply ../iptables.patch && \
        python extensions/fixinit.py
    scanignore=jni/v8
    build=cd iptables && \
        $$NDK$$/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk && \
        mv libs/armeabi/iptables ../assets/install/
    buildjni=no

Build:1.2,307
    disable=blobs in jni
    commit=1.2
    rm=buildtools,libs/RootToolsSvn-1.7.jar,assets/install/iptables
    extlibs=iptables-script_1.4.20.zip
    srclibs=RootToolsSvn@1.7
    prebuild=sed -i 's/android-7/android-8/' build.xml && \
        echo "source.dir=src;$$RootToolsSvn$$/src" >> ant.properties && \
        echo "ndk.dir=$$NDK$$" >> local.properties && \
        unzip libs/iptables-script_1.4.20.zip && \
        sed -i 's/arm x86 mips/arm/g' external/Makefile && \
        rm libs/iptables-script_1.4.20.zip
    scanignore=jni/v8
    build=make -C external NDK=$$NDK$$ && \
        mv external/iptables_arm assets/install/iptables
    buildjni=no

Maintainer Notes:
We should really be rebuilding the libraries in jni/v8 (they're from the
platform) to verify them properly.
.

Auto Update Mode:None
Update Check Mode:Tags
Current Version:1.2.1
Current Version Code:318

