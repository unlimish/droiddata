Categories:
  - Games
License: GPL-2.0-or-later
AuthorEmail: team@vcmi.eu
WebSite: https://vcmi.eu
SourceCode: https://github.com/vcmi/vcmi
IssueTracker: https://github.com/vcmi/vcmi/issues
Changelog: https://github.com/vcmi/vcmi/blob/HEAD/ChangeLog.md

Description: |-
  VCMI is work-in-progress attempt to recreate engine for Heroes of Might and Magic III, giving it new and extended possibilities.

  This is an VCMI port for Android. To play it, you need to use your own, legally acquired Heroes of Might and Magic III data files.

  Installation: Copy "Data", "Maps" and "Mp3" from Heroes III to any folder on mobile device, then open VCMI, select Heroes III data import option, then select the folder where you copied Heroes III data.

RepoType: git
Repo: https://github.com/vcmi/vcmi.git

Builds:
  - versionName: '1.4'
    versionCode: 1004
    commit: 93d13ec59c9032b4cced8277e71ac2c80f1152cb
    timeout: 80000
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y wget yasm jq dos2unix
    output: project/vcmi-app/build/outputs/apk/vcmi-vcmiOnly-release-unsigned.apk
    prebuild:
      - export VCMI_ABI="armeabi-v7a"
      - export ABI_ALIAS='arm\|armeabi\|arm_v7a\|armeabi-v7a'
      - export VCMI_COMMIT="7e7c98852dbec9da748c261995fd16c11e53c494"
      - export VCMI_VERCODE=1004
      - pushd ext/vcmi
      - git checkout -f $VCMI_COMMIT
      - popd
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - wget https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.13.tar.gz
      - sha256sum -c <<< "da3411ea45622579d419bfda66f45cd0f8c32a181d84adfa936f5688388995cf  boost_1_68_0.tar.gz"
      - sha256sum -c <<< "3a3eafbceea5125c04be585373bfd8b3a18f259bd7eae3efc4e6d8e60e0d7f64  SDL2_image-2.0.1.tar.gz"
      - sha256sum -c <<< "5a24f62a610249d744cbd8d28ee399d8905db7222bf3bdbc8a8b4a76e597695f  SDL2_mixer-2.0.1.tar.gz"
      - sha256sum -c <<< "f51d3829985691efa9aad306a935ef69bc880a525c887548563c33ea35e8ed04  SDL2_ttf-2.0.13.tar.gz"
      - tar -xzf boost_1_68_0.tar.gz
      - tar -xzf SDL2_image-2.0.1.tar.gz
      - tar -xzf SDL2_mixer-2.0.1.tar.gz
      - tar -xf SDL2_ttf-2.0.13.tar.gz
      - rm boost_1_68_0.tar.gz SDL2_image-2.0.1.tar.gz SDL2_mixer-2.0.1.tar.gz SDL2_ttf-2.0.13.tar.gz
      - mkdir ext/boost
      - mv boost_1_68_0 ext/boost/.
      - mv SDL2_image-2.0.1 ext/SDL2/SDL2-image/code
      - mv SDL2_mixer-2.0.1 ext/SDL2/SDL2-mixer/code
      - mv SDL2_ttf-2.0.13 ext/SDL2/SDL2-ttf/code
      - cat vcmiconf.json | jq --arg "DIR" $(pwd) --arg "NDK14" "$HOME/android-ndk/r14b"
        --arg "ABIS" "$VCMI_ABI" '.bash.ndkRoot=$NDK14 | .ndkRoot=$NDK14 | .sdkRoot="$$SDK$$"
        | .javaRoot="/usr/lib/jvm/java-8-openjdk-amd64" | .boostFolderName="boost_1_68_0"
        | .androidApi=21 | .bash.projectRoot=$DIR | .projectRoot=$DIR | .abis=$ABIS'
        > temp
      - mv temp vcmiconf.json
      - sed -i -e 's/\.\/gradlew/gradle/' build.py
      - dos2unix project/gradle/wrapper/gradle-wrapper.properties
      - sed -i -e 's/signingConfig\ signingConfigs\.releaseSigning/signingConfig null/'
        -e '/applicationVariants\.all/d' -e 's/zipAlignEnabled\ true//' project/vcmi-app/build.gradle
      - sed -i -e 's/^fixFFConf().*//' fix_ffmpeg_confs.py
      - python3 update_internal_assets.py
      - python3 build.py fixpaths
      - find ext/ff -iname "*.sh" -exec dos2unix {} \; -exec chmod +x {} \; -exec
        sed -i -e "s/^make$/make -j$(nproc)/" {} \;
      - find ext/ff -iname "configure" -exec dos2unix {} \; -exec chmod +x {} \;
      - sed -i -e "s/^SLIBNAME_WITH_VERSION='\$(SLIBNAME)\.\$(LIBVERSION)'/SLIBNAME_WITH_VERSION='\$(SLIBNAME)'/"
        -e "s/^SLIBNAME_WITH_MAJOR='\$(SLIBNAME)\.\$(LIBMAJOR)'/SLIBNAME_WITH_MAJOR='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_NAME='\$(SLIBNAME_WITH_VERSION)'/SLIB_INSTALL_NAME='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_LINKS='\$(SLIBNAME_WITH_MAJOR)\ \$(SLIBNAME)'/SLIB_INSTALL_LINKS=''/"
        ext/ff/ffmpeg/configure
      - find ext/SDL2 -type f -regextype posix-extended -regex '.+\.(dll|jar|lib|mcp)$'
        -delete
      - sed -i -e "s/^APP_VERSION_CODE=.*/APP_VERSION_CODE=${VCMI_VERCODE}/" project/gradle.properties
      - sed -i -e "/^\(build_arch\|copy_output\)\ \(${ABI_ALIAS}\)\($\|\ \)/b; /^\(build_arch\|copy_output\)\
        .*/d" ext/ff/all.sh
      - sed -i -e "/^build_arch\ \(${ABI_ALIAS}\)\ .*/b; /^build_arch\ .*/d" ext/ff/bx264.sh
    scandelete:
      - ext
    build:
      - python3 build.py build-optional
      - cat vcmiconf.json | jq --arg "NDK17" "$HOME/android-ndk/r17c" '.bash.ndkRoot=$NDK17
        | .ndkRoot=$NDK17' > temp
      - mv temp vcmiconf.json
      - python3 build.py fixpaths
      - python3 build.py build-cmake
      - python3 build.py build-app

  - versionName: '1.4'
    versionCode: 1005
    commit: 93d13ec59c9032b4cced8277e71ac2c80f1152cb
    timeout: 80000
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y wget yasm jq dos2unix
    output: project/vcmi-app/build/outputs/apk/vcmi-vcmiOnly-release-unsigned.apk
    prebuild:
      - export VCMI_ABI="arm64-v8a"
      - export ABI_ALIAS='aarch64\|arm64-v8a\|arm64_v8a'
      - export VCMI_COMMIT="7e7c98852dbec9da748c261995fd16c11e53c494"
      - export VCMI_VERCODE=1005
      - pushd ext/vcmi
      - git checkout -f $VCMI_COMMIT
      - popd
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - wget https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.13.tar.gz
      - sha256sum -c <<< "da3411ea45622579d419bfda66f45cd0f8c32a181d84adfa936f5688388995cf  boost_1_68_0.tar.gz"
      - sha256sum -c <<< "3a3eafbceea5125c04be585373bfd8b3a18f259bd7eae3efc4e6d8e60e0d7f64  SDL2_image-2.0.1.tar.gz"
      - sha256sum -c <<< "5a24f62a610249d744cbd8d28ee399d8905db7222bf3bdbc8a8b4a76e597695f  SDL2_mixer-2.0.1.tar.gz"
      - sha256sum -c <<< "f51d3829985691efa9aad306a935ef69bc880a525c887548563c33ea35e8ed04  SDL2_ttf-2.0.13.tar.gz"
      - tar -xzf boost_1_68_0.tar.gz
      - tar -xzf SDL2_image-2.0.1.tar.gz
      - tar -xzf SDL2_mixer-2.0.1.tar.gz
      - tar -xf SDL2_ttf-2.0.13.tar.gz
      - rm boost_1_68_0.tar.gz SDL2_image-2.0.1.tar.gz SDL2_mixer-2.0.1.tar.gz SDL2_ttf-2.0.13.tar.gz
      - mkdir ext/boost
      - mv boost_1_68_0 ext/boost/.
      - mv SDL2_image-2.0.1 ext/SDL2/SDL2-image/code
      - mv SDL2_mixer-2.0.1 ext/SDL2/SDL2-mixer/code
      - mv SDL2_ttf-2.0.13 ext/SDL2/SDL2-ttf/code
      - cat vcmiconf.json | jq --arg "DIR" $(pwd) --arg "NDK14" "$HOME/android-ndk/r14b"
        --arg "ABIS" "$VCMI_ABI" '.bash.ndkRoot=$NDK14 | .ndkRoot=$NDK14 | .sdkRoot="$$SDK$$"
        | .javaRoot="/usr/lib/jvm/java-8-openjdk-amd64" | .boostFolderName="boost_1_68_0"
        | .androidApi=21 | .bash.projectRoot=$DIR | .projectRoot=$DIR | .abis=$ABIS'
        > temp
      - mv temp vcmiconf.json
      - sed -i -e 's/\.\/gradlew/gradle/' build.py
      - dos2unix project/gradle/wrapper/gradle-wrapper.properties
      - sed -i -e 's/signingConfig\ signingConfigs\.releaseSigning/signingConfig null/'
        -e '/applicationVariants\.all/d' -e 's/zipAlignEnabled\ true//' project/vcmi-app/build.gradle
      - sed -i -e 's/^fixFFConf().*//' fix_ffmpeg_confs.py
      - python3 update_internal_assets.py
      - python3 build.py fixpaths
      - find ext/ff -iname "*.sh" -exec dos2unix {} \; -exec chmod +x {} \; -exec
        sed -i -e "s/^make$/make -j$(nproc)/" {} \;
      - find ext/ff -iname "configure" -exec dos2unix {} \; -exec chmod +x {} \;
      - sed -i -e "s/^SLIBNAME_WITH_VERSION='\$(SLIBNAME)\.\$(LIBVERSION)'/SLIBNAME_WITH_VERSION='\$(SLIBNAME)'/"
        -e "s/^SLIBNAME_WITH_MAJOR='\$(SLIBNAME)\.\$(LIBMAJOR)'/SLIBNAME_WITH_MAJOR='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_NAME='\$(SLIBNAME_WITH_VERSION)'/SLIB_INSTALL_NAME='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_LINKS='\$(SLIBNAME_WITH_MAJOR)\ \$(SLIBNAME)'/SLIB_INSTALL_LINKS=''/"
        ext/ff/ffmpeg/configure
      - find ext/SDL2 -type f -regextype posix-extended -regex '.+\.(dll|jar|lib|mcp)$'
        -delete
      - sed -i -e "s/^APP_VERSION_CODE=.*/APP_VERSION_CODE=${VCMI_VERCODE}/" project/gradle.properties
      - sed -i -e "/^\(build_arch\|copy_output\)\ \(${ABI_ALIAS}\)\($\|\ \)/b; /^\(build_arch\|copy_output\)\
        .*/d" ext/ff/all.sh
      - sed -i -e "/^build_arch\ \(${ABI_ALIAS}\)\ .*/b; /^build_arch\ .*/d" ext/ff/bx264.sh
    scandelete:
      - ext
    build:
      - python3 build.py build-optional
      - cat vcmiconf.json | jq --arg "NDK17" "$HOME/android-ndk/r17c" '.bash.ndkRoot=$NDK17
        | .ndkRoot=$NDK17' > temp
      - mv temp vcmiconf.json
      - python3 build.py fixpaths
      - python3 build.py build-cmake
      - python3 build.py build-app

  - versionName: '1.4'
    versionCode: 1006
    commit: 93d13ec59c9032b4cced8277e71ac2c80f1152cb
    timeout: 80000
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y wget yasm jq dos2unix
    output: project/vcmi-app/build/outputs/apk/vcmi-vcmiOnly-release-unsigned.apk
    prebuild:
      - export VCMI_ABI="x86"
      - export ABI_ALIAS='i686\|x86'
      - export VCMI_COMMIT="7e7c98852dbec9da748c261995fd16c11e53c494"
      - export VCMI_VERCODE=1006
      - pushd ext/vcmi
      - git checkout -f $VCMI_COMMIT
      - popd
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - wget https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.13.tar.gz
      - sha256sum -c <<< "da3411ea45622579d419bfda66f45cd0f8c32a181d84adfa936f5688388995cf  boost_1_68_0.tar.gz"
      - sha256sum -c <<< "3a3eafbceea5125c04be585373bfd8b3a18f259bd7eae3efc4e6d8e60e0d7f64  SDL2_image-2.0.1.tar.gz"
      - sha256sum -c <<< "5a24f62a610249d744cbd8d28ee399d8905db7222bf3bdbc8a8b4a76e597695f  SDL2_mixer-2.0.1.tar.gz"
      - sha256sum -c <<< "f51d3829985691efa9aad306a935ef69bc880a525c887548563c33ea35e8ed04  SDL2_ttf-2.0.13.tar.gz"
      - tar -xzf boost_1_68_0.tar.gz
      - tar -xzf SDL2_image-2.0.1.tar.gz
      - tar -xzf SDL2_mixer-2.0.1.tar.gz
      - tar -xf SDL2_ttf-2.0.13.tar.gz
      - rm boost_1_68_0.tar.gz SDL2_image-2.0.1.tar.gz SDL2_mixer-2.0.1.tar.gz SDL2_ttf-2.0.13.tar.gz
      - mkdir ext/boost
      - mv boost_1_68_0 ext/boost/.
      - mv SDL2_image-2.0.1 ext/SDL2/SDL2-image/code
      - mv SDL2_mixer-2.0.1 ext/SDL2/SDL2-mixer/code
      - mv SDL2_ttf-2.0.13 ext/SDL2/SDL2-ttf/code
      - cat vcmiconf.json | jq --arg "DIR" $(pwd) --arg "NDK14" "$HOME/android-ndk/r14b"
        --arg "ABIS" "$VCMI_ABI" '.bash.ndkRoot=$NDK14 | .ndkRoot=$NDK14 | .sdkRoot="$$SDK$$"
        | .javaRoot="/usr/lib/jvm/java-8-openjdk-amd64" | .boostFolderName="boost_1_68_0"
        | .androidApi=21 | .bash.projectRoot=$DIR | .projectRoot=$DIR | .abis=$ABIS'
        > temp
      - mv temp vcmiconf.json
      - sed -i -e 's/\.\/gradlew/gradle/' build.py
      - dos2unix project/gradle/wrapper/gradle-wrapper.properties
      - sed -i -e 's/signingConfig\ signingConfigs\.releaseSigning/signingConfig null/'
        -e '/applicationVariants\.all/d' -e 's/zipAlignEnabled\ true//' project/vcmi-app/build.gradle
      - sed -i -e 's/^fixFFConf().*//' fix_ffmpeg_confs.py
      - python3 update_internal_assets.py
      - python3 build.py fixpaths
      - find ext/ff -iname "*.sh" -exec dos2unix {} \; -exec chmod +x {} \; -exec
        sed -i -e "s/^make$/make -j$(nproc)/" {} \;
      - find ext/ff -iname "configure" -exec dos2unix {} \; -exec chmod +x {} \;
      - sed -i -e "s/^SLIBNAME_WITH_VERSION='\$(SLIBNAME)\.\$(LIBVERSION)'/SLIBNAME_WITH_VERSION='\$(SLIBNAME)'/"
        -e "s/^SLIBNAME_WITH_MAJOR='\$(SLIBNAME)\.\$(LIBMAJOR)'/SLIBNAME_WITH_MAJOR='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_NAME='\$(SLIBNAME_WITH_VERSION)'/SLIB_INSTALL_NAME='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_LINKS='\$(SLIBNAME_WITH_MAJOR)\ \$(SLIBNAME)'/SLIB_INSTALL_LINKS=''/"
        ext/ff/ffmpeg/configure
      - find ext/SDL2 -type f -regextype posix-extended -regex '.+\.(dll|jar|lib|mcp)$'
        -delete
      - sed -i -e "s/^APP_VERSION_CODE=.*/APP_VERSION_CODE=${VCMI_VERCODE}/" project/gradle.properties
      - sed -i -e "/^\(build_arch\|copy_output\)\ \(${ABI_ALIAS}\)\($\|\ \)/b; /^\(build_arch\|copy_output\)\
        .*/d" ext/ff/all.sh
      - sed -i -e "/^build_arch\ \(${ABI_ALIAS}\)\ .*/b; /^build_arch\ .*/d" ext/ff/bx264.sh
    scandelete:
      - ext
    build:
      - python3 build.py build-optional
      - cat vcmiconf.json | jq --arg "NDK17" "$HOME/android-ndk/r17c" '.bash.ndkRoot=$NDK17
        | .ndkRoot=$NDK17' > temp
      - mv temp vcmiconf.json
      - python3 build.py fixpaths
      - python3 build.py build-cmake
      - python3 build.py build-app

  - versionName: '1.4'
    versionCode: 1007
    commit: 93d13ec59c9032b4cced8277e71ac2c80f1152cb
    timeout: 80000
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y wget yasm jq dos2unix
    output: project/vcmi-app/build/outputs/apk/vcmi-vcmiOnly-release-unsigned.apk
    prebuild:
      - export VCMI_ABI="x86_64"
      - export ABI_ALIAS='x86_64'
      - export VCMI_COMMIT="7e7c98852dbec9da748c261995fd16c11e53c494"
      - export VCMI_VERCODE=1007
      - pushd ext/vcmi
      - git checkout -f $VCMI_COMMIT
      - popd
      - wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz
      - wget https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.1.tar.gz
      - wget https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.13.tar.gz
      - sha256sum -c <<< "da3411ea45622579d419bfda66f45cd0f8c32a181d84adfa936f5688388995cf  boost_1_68_0.tar.gz"
      - sha256sum -c <<< "3a3eafbceea5125c04be585373bfd8b3a18f259bd7eae3efc4e6d8e60e0d7f64  SDL2_image-2.0.1.tar.gz"
      - sha256sum -c <<< "5a24f62a610249d744cbd8d28ee399d8905db7222bf3bdbc8a8b4a76e597695f  SDL2_mixer-2.0.1.tar.gz"
      - sha256sum -c <<< "f51d3829985691efa9aad306a935ef69bc880a525c887548563c33ea35e8ed04  SDL2_ttf-2.0.13.tar.gz"
      - tar -xzf boost_1_68_0.tar.gz
      - tar -xzf SDL2_image-2.0.1.tar.gz
      - tar -xzf SDL2_mixer-2.0.1.tar.gz
      - tar -xf SDL2_ttf-2.0.13.tar.gz
      - rm boost_1_68_0.tar.gz SDL2_image-2.0.1.tar.gz SDL2_mixer-2.0.1.tar.gz SDL2_ttf-2.0.13.tar.gz
      - mkdir ext/boost
      - mv boost_1_68_0 ext/boost/.
      - mv SDL2_image-2.0.1 ext/SDL2/SDL2-image/code
      - mv SDL2_mixer-2.0.1 ext/SDL2/SDL2-mixer/code
      - mv SDL2_ttf-2.0.13 ext/SDL2/SDL2-ttf/code
      - cat vcmiconf.json | jq --arg "DIR" $(pwd) --arg "NDK14" "$HOME/android-ndk/r14b"
        --arg "ABIS" "$VCMI_ABI" '.bash.ndkRoot=$NDK14 | .ndkRoot=$NDK14 | .sdkRoot="$$SDK$$"
        | .javaRoot="/usr/lib/jvm/java-8-openjdk-amd64" | .boostFolderName="boost_1_68_0"
        | .androidApi=21 | .bash.projectRoot=$DIR | .projectRoot=$DIR | .abis=$ABIS'
        > temp
      - mv temp vcmiconf.json
      - sed -i -e 's/\.\/gradlew/gradle/' build.py
      - dos2unix project/gradle/wrapper/gradle-wrapper.properties
      - sed -i -e 's/signingConfig\ signingConfigs\.releaseSigning/signingConfig null/'
        -e '/applicationVariants\.all/d' -e 's/zipAlignEnabled\ true//' project/vcmi-app/build.gradle
      - sed -i -e 's/^fixFFConf().*//' fix_ffmpeg_confs.py
      - python3 update_internal_assets.py
      - python3 build.py fixpaths
      - find ext/ff -iname "*.sh" -exec dos2unix {} \; -exec chmod +x {} \; -exec
        sed -i -e "s/^make$/make -j$(nproc)/" {} \;
      - find ext/ff -iname "configure" -exec dos2unix {} \; -exec chmod +x {} \;
      - sed -i -e "s/^SLIBNAME_WITH_VERSION='\$(SLIBNAME)\.\$(LIBVERSION)'/SLIBNAME_WITH_VERSION='\$(SLIBNAME)'/"
        -e "s/^SLIBNAME_WITH_MAJOR='\$(SLIBNAME)\.\$(LIBMAJOR)'/SLIBNAME_WITH_MAJOR='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_NAME='\$(SLIBNAME_WITH_VERSION)'/SLIB_INSTALL_NAME='\$(SLIBNAME)'/"
        -e "s/^SLIB_INSTALL_LINKS='\$(SLIBNAME_WITH_MAJOR)\ \$(SLIBNAME)'/SLIB_INSTALL_LINKS=''/"
        ext/ff/ffmpeg/configure
      - find ext/SDL2 -type f -regextype posix-extended -regex '.+\.(dll|jar|lib|mcp)$'
        -delete
      - sed -i -e "s/^APP_VERSION_CODE=.*/APP_VERSION_CODE=${VCMI_VERCODE}/" project/gradle.properties
      - sed -i -e "/^\(build_arch\|copy_output\)\ \(${ABI_ALIAS}\)\($\|\ \)/b; /^\(build_arch\|copy_output\)\
        .*/d" ext/ff/all.sh
      - sed -i -e "/^build_arch\ \(${ABI_ALIAS}\)\ .*/b; /^build_arch\ .*/d" ext/ff/bx264.sh
    scandelete:
      - ext
    build:
      - python3 build.py build-optional
      - cat vcmiconf.json | jq --arg "NDK17" "$HOME/android-ndk/r17c" '.bash.ndkRoot=$NDK17
        | .ndkRoot=$NDK17' > temp
      - mv temp vcmiconf.json
      - python3 build.py fixpaths
      - python3 build.py build-cmake
      - python3 build.py build-app

  - versionName: 1.3.2
    versionCode: 13210
    commit: 1.3.2
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.3.2
    versionCode: 13211
    commit: 1.3.2
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.0
    versionCode: 14000
    commit: 7fc60a08982c17505a065b079e51017dac91fb1e
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.0
    versionCode: 14001
    commit: 7fc60a08982c17505a065b079e51017dac91fb1e
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.1
    versionCode: 14100
    commit: 17b2ce2c81eeeb2ac1c46c38f963da2e8ec1d0e4
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.1
    versionCode: 14101
    commit: 17b2ce2c81eeeb2ac1c46c38f963da2e8ec1d0e4
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip wget xz-utils unzip gcc g++ make
        libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    prebuild:
      - pushd ~
      - wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108  android-ndk-r25c-linux.zip'
      - git clone https://github.com/Kitware/CMake
      - cd CMake
      - git reset --hard v3.27.6
      - mkdir build && cd build
      - ../bootstrap && make
      - cd ../..
      - git clone --recurse-submodules https://github.com/conan-io/conan
      - pushd conan
      - git reset --hard 1.60.1
      - pip install .
      - popd && popd && cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - mkdir .conan
      - cd .conan
      - wget https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - cd ..
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/android-ndk-r25c-linux.zip|'
        .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:${HOME}/CMake/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.2
    versionCode: 14210
    commit: a577a7466ba7d6b528d25743f36f126618bc9a26
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.2
    versionCode: 14211
    commit: a577a7466ba7d6b528d25743f36f126618bc9a26
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.4
    versionCode: 14400
    commit: b8f3de38c1c39c2501cb555c5d1dca4c722e67e8
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.4
    versionCode: 14401
    commit: b8f3de38c1c39c2501cb555c5d1dca4c722e67e8
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.5
    versionCode: 14510
    commit: 3d2f69199a235faef40ca8e7d6bd8081f02b1fdc
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.4.5
    versionCode: 14511
    commit: 3d2f69199a235faef40ca8e7d6bd8081f02b1fdc
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build python3-pip xz-utils unzip g++ make libssl-dev
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - CMake@v3.27.6
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pushd $$CMake$$
      - mkdir build
      - cd build
      - ../bootstrap
      - make
      - popd
      - pip install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.0
    versionCode: 15000
    commit: d72afb1acc8a9d8507e1a60ca689d121e7956693
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.0
    versionCode: 15001
    commit: d72afb1acc8a9d8507e1a60ca689d121e7956693
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.1
    versionCode: 15130
    commit: 194b3389f903584b46c5b60418595874b1e37c39
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.1
    versionCode: 15131
    commit: 194b3389f903584b46c5b60418595874b1e37c39
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.2
    versionCode: 15200
    commit: 9121fcdc975dbf31a8eec8b2a41922402e5321a2
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo armeabi-v7a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/armeabi-v7a.txz
      - sha256sum -c <<< 'e5a7df93703930d4e8783b8228cfdb28d73c3811d79522df8083231fea2ad00e  armeabi-v7a.txz'
      - tar -xf armeabi-v7a.txz
      - rm armeabi-v7a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-32
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$$CMake$$/build/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-32 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

  - versionName: 1.5.2
    versionCode: 15201
    commit: 9121fcdc975dbf31a8eec8b2a41922402e5321a2
    timeout: 30000
    subdir: android/vcmi-app
    submodules: true
    sudo:
      - apt-get update
      - apt-get install -y ninja-build pipx xz-utils unzip g++ make libssl-dev
      - apt-get install -y cmake -t bookworm-backports
    init: git revert -n c62d945b2d6e698becc16a02dc3cdd81238639c1
    gradle:
      - yes
    srclibs:
      - conan@1.60.1
    prebuild:
      - pushd ~
      - curl -Lo ndk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
      - sha256sum -c <<< '769ee342ea75f80619d985c2da990c48b3d8eaf45f48783a2d48870d04b46108
        ndk.zip'
      - popd
      - pipx install $$conan$$
      - cd ../..
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - mkdir .conan
      - pushd .conan
      - curl -Lo aarch64-v8a.txz https://github.com/vcmi/vcmi-dependencies/releases/download/android-1.0/aarch64-v8a.txz
      - sha256sum -c <<< 'b41033513458e4658a628b35065c31144a50453a45e621ae4014fc8994d6e6c9  aarch64-v8a.txz'
      - tar -xf aarch64-v8a.txz
      - rm aarch64-v8a.txz
      - popd
      - printf "[tool_requires]\nandroid-ndk/r25c" >> CI/conan/base/android
      - conan profile new default --detect
      - conan info . --profile:build=default --profile:host=CI/conan/android-64
      - sed -i -e 's|https.*linux\.zip$|file:///home/vagrant/ndk.zip|' .conan/data/android-ndk/r25c/_/_/export/conandata.yml
      - sed -i -e 's/minSdk.*$/minSdk 21/' android/vcmi-app/build.gradle
      - sed -i -e 's/versionCode.*$/versionCode $$VERCODE$$/' android/vcmi-app/build.gradle
    scandelete:
      - .conan
      - osx
    build:
      - cd ../..
      - export GENERATE_ONLY_BUILT_CONFIG=1
      - export CONAN_USER_HOME="$(pwd)"
      - export CONAN_USER_HOME_SHORT="$(pwd)"
      - export PATH="${HOME}/.local/bin:$PATH"
      - conan install . --install-folder=conan-generated --build --profile:build=default
        --profile:host=CI/conan/android-64 -s compiler.cppstd=11
      - echo "ndk.dir=$(eval echo ${CONAN_USER_HOME}/.conan/data/android-ndk/r25c/_/_/package/*/bin)"
        >> android/local.properties
      - mkdir build
      - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=conan-generated/conan_toolchain.cmake
      - cmake --build build

MaintainerNotes: |-
  VCMI contains GMS dependencies to provide TLS support on android 4.4.
  This dependency and code was introduced by a single commit, which is reverted
  in the "init" section. Because of this, we also bump minSdk version to 21
  (android 5.0).

  VCMI requires conan version bigger than 1.54.0 (but not 2.x) for managing and
  building dependencies. Conan is not available in bullseye repos, so we install
  it from source with python-pip.

  VCMI needs android-ndk-r25c supplied by conan to build. The NDK package in conan
  uses official google NDK, but modifies it to work with conan. We download conan build
  files for NDK and change the conan NDK package to provide our own android-ndk-r25c
  (in either case, conan also performs its own sha256sum check and it has a matching
  checksum with android-ndk-r25c provided by us).

  Dependencies listed for VCMI in the upstream conanfile.py (which are pulled from
  conancenter) have various compilation errors. Instead, we download conan dependencies
  provided by the upstream. They contain both binaries and source code, and also conan
  build files for them, we remove binaries with scandelete. Additionally, a "--build"
  flag is passed to conan to force rebuilding all dependencies (and their dependencies
  and required build tools) from source.

  Upstream only provides armeabi-v7a and arm64-v8a builds, and there's conan profiles only
  for these architectures.

  NDK is also required during 'gradle assemble' phase, otherwise gradle wont strip native libraries
  and the resulting APK would be ~180 mb instead of ~25 mb. We reuse conan NDK for this.

  Notes for older builds:
  Build process requires 2 NDKs: r14b to build the dependencies (SDL and boost) and r17c to build the game itself.
  Commit hashes for the launcher and vcmi itself match the APK released on google play. The newer commit reported in the app itself is a bug.
  The prebuilt section fixes a number of things to allow building dependencies and libraries from the source.
  Upstream uses prebuilt libs instead and their build procedures were not updated for some time.
  Builds split into a separate build for each architecture, with incremental version code (which must be reflected in both main "build" section and prebuild env variable).
  "commit" section points to the commit of the launcher repo, while "VCMI_COMMIT" var points to commit of the upstream vcmi repo.

  VCMI requires cmake 3.27.6 (official docs say 3.20+, however it yields various compilation errors). Bullseye backports repo doesn't have 3.27.6,
  so we build it from source.

AutoUpdateMode: Version
UpdateCheckMode: Tags
VercodeOperation:
  - 10 * %c
  - 10 * %c + 1
CurrentVersion: 1.5.2
CurrentVersionCode: 15201
